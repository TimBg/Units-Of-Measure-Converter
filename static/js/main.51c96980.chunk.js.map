{"version":3,"sources":["reducers/mainReducer.js","App.js","redux/store.js","index.js"],"names":["_","require","CONVERT_JSON","ADD_UNIT","initialState","dependencies","result","mainReducer","state","action","type","newState","cloneDeep","data","alert","val","unit","value","val1","val2","Number","App","store","useState","undefined","setResult","dispatch","useDispatch","convertValue","e","file","target","files","reader","FileReader","onload","json","JSON","parse","u1","distance","v1","u2","convert_to","stringify","getState","branch1","error","readAsText","addUnit","unit1","unit2","rat","ratio","console","log","className","InputLabel","Input","onChange","reducers","combineReducers","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51c96980.chunk.js","sourcesContent":["let _ = require('lodash');\r\n\r\nconst CONVERT_JSON = 'CONVERT_JSON';\r\nconst ADD_UNIT = 'ADD_UNIT';\r\n\r\nlet initialState = {\r\n    dependencies: {\r\n        \"m\": 1,\r\n        \"cm\": 100,\r\n        \"in\": 39.370078,\r\n        \"ft\": 3.280839\r\n    },\r\n    result: null,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    let copyOfState;\r\n\r\n    switch (action.type) {\r\n        case CONVERT_JSON:\r\n            {\r\n                let newState = _.cloneDeep(state);\r\n                if ((action.data[1] !== 0 && !action.data[1]) || action.data[1] < 0 || typeof action.data[1] !== 'number') {\r\n                    alert('The value is not valid');\r\n                    return newState;\r\n                } else if (action.data[0] === \"m\") {\r\n                    if (newState.dependencies[action.data[2]]) {\r\n                        let val = newState.dependencies[action.data[2]];\r\n                        newState.result = { unit: action.data[2], value: action.data[1] * val };\r\n                    } else {\r\n                        alert('There is no such unit of measure in the database: ' + action.data[2]);\r\n                    }\r\n                } else if (action.data[2] === \"m\") {\r\n                    if (newState.dependencies[action.data[0]]) {\r\n                        let val = newState.dependencies[action.data[0]];\r\n                        newState.result = { unit: action.data[2], value: action.data[1] / val };\r\n                    } else {\r\n                        alert('There is no such unit of measure in the database: ' + action.data[0]);\r\n                    }\r\n                } else if (newState.dependencies[action.data[0]] && newState.dependencies[action.data[2]]) {\r\n                    let val1 = newState.dependencies[action.data[0]], val2 = newState.dependencies[action.data[2]];\r\n                    newState.result = { unit: action.data[2], value: action.data[1] / val1 * val2 };\r\n                } else if (!newState.dependencies[action.data[0]]) {\r\n                    alert('There is no such unit of measure in the database: ' + action.data[0]);\r\n                } else if (!newState.dependencies[action.data[2]]) {\r\n                    alert('There is no such unit of measure in the database: ' + action.data[2]);\r\n                }\r\n\r\n                copyOfState = newState;\r\n            }; return copyOfState;\r\n        case ADD_UNIT:\r\n            {\r\n                let newState = _.cloneDeep(state);\r\n\r\n                if ((action.data[2] !== 0 && !action.data[2]) || action.data[2] < 0 || typeof (action.data[2]) !== Number) {\r\n                    alert('The value is not valid');\r\n                    return newState;\r\n                } else if (newState.dependencies[action.data[0]] && newState.dependencies[action.data[1]]) {\r\n                    alert('The data is already in the database');\r\n                    return newState;\r\n                } else if (!newState.dependencies[action.data[0]] && !newState.dependencies[action.data[1]]) {\r\n                    alert('There are no units of measure with which to compare your');\r\n                    return newState;\r\n                } else if (newState.dependencies[action.data[0]]) {\r\n                    alert('Success');\r\n                    newState.dependencies[action.data[1]] = newState.dependencies[action.data[0]] * action.data[2];\r\n                } else if (newState.dependencies[action.data[1]]) {\r\n                    alert('Success');\r\n                    newState.dependencies[action.data[0]] = newState.dependencies[action.data[1]] / action.data[2];\r\n                }\r\n\r\n                copyOfState = newState\r\n            }; return copyOfState;\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport const convert = (u1, v1, u2) => {\r\n    return {\r\n        type: CONVERT_JSON,\r\n        data: [u1, v1, u2]\r\n    }\r\n}\r\n\r\nexport const add = (u1, u2, rat) => {\r\n    return {\r\n        type: ADD_UNIT,\r\n        data: [u1, u2, rat]\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Input, InputLabel } from '@material-ui/core';\n\nimport { convert, add } from './reducers/mainReducer';\n\nimport './App.css';\n\nconst App = ({ store }) => {\n\n    const [result, setResult] = useState(undefined);\n    const dispatch = useDispatch();\n\n    const convertValue = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.onload = (function (JSONFile) {\n            return function (e) {\n                try {\n                    let json = JSON.parse(e.target.result);\n                    dispatch(convert(json.distance.unit, json.distance.value, json.convert_to));\n                    setResult(JSON.stringify(store.getState().branch1.result));\n                } catch (error) {\n                    alert('Error');\n                }\n            }\n        })(file);\n        reader.readAsText(file);\n        e.target.value = '';\n    }\n\n    const addUnit = (e) => {\n        let file = e.target.files[0];\n        let reader = new FileReader();\n        reader.onload = (function (JSONFile) {\n            return function (e) {\n                try {\n                    let json = JSON.parse(e.target.result);\n                    //json = JSON.stringify(json);\n                    dispatch(add(json.unit1, json.unit2, json.ratio));\n                    console.log(store.getState().branch1.dependencies);\n                } catch (error) {\n                    alert('Error');\n                }\n            }\n        })(file);\n        reader.readAsText(file);\n        e.target.value = '';\n    }\n\n\n\n    return (\n        <div className='App'>\n            <div className='wrapper'>\n                <InputLabel>Convert</InputLabel>\n                <Input type='file' onChange={(e) => convertValue(e)} />\n            </div>\n            <div className='wrapper'>\n                <InputLabel>Add unit of measure</InputLabel>\n                <Input type='file' onChange={(e) => addUnit(e)} />\n            </div>\n            <div className='wrapper'>\n                {result !== 'null' && result}\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nimport mainReducer from './../reducers/mainReducer';\r\n\r\n\r\nlet reducers = combineReducers({\r\n    branch1: mainReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './App';\nimport store from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App store={store} />\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}